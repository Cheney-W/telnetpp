sudo: false
language: cpp

linux_gcc: &linux_gcc
  os: linux
  dist: xenial
  compiler: gcc
  addons:
    apt:
      sources:
        - ubuntu-toolchain-r-test
      packages:
        - g++-5

linux_clang: &linux_clang
  os: linux
  dist: xenial
  compiler: clang
  addons:
    apt:
      sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-4.0
      packages:
        - clang-4.0

matrix:
  include:
  - <<: *linux_gcc
    env:
      - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5 && CONFIG=Debug && SHARED=0"

  - <<: *linux_clang
    env:
     - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0 && CONFIG=Debug && SHARED=0"

#  - os: linux
#    dist: trusty
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#        packages:
#          - g++-5
#          - libgtest-dev
#          - libboost1.55-all-dev
#    env:
#      - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5 && CONFIG=Debug && SHARED=1"
#
#  - os: linux
#    dist: trusty
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#        packages:
#          - g++-5
#          - libgtest-dev
#          - libboost1.55-all-dev
#    env:
#      - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5 && CONFIG=Release && SHARED=0"
#
#  - os: linux
#    dist: trusty
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#        packages:
#          - g++-5
#          - libgtest-dev
#          - libboost1.55-all-dev
#    env:
#      - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5 && CONFIG=Release && SHARED=1"
#
#  - os: linux
#    dist: trusty
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#          - llvm-toolchain-trusty-4.0
#        packages:
#          - clang-4.0
#          - libgtest-dev
#          - libboost1.55-all-dev
#    env:
#      - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0 && CONFIG=Debug && SHARED=0"
#
#  - os: linux
#    dist: trusty
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#          - llvm-toolchain-trusty-4.0
#        packages:
#          - clang-4.0
#          - libgtest-dev
#          - libboost1.55-all-dev
#    env:
#      - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0 && CONFIG=Debug && SHARED=1"

#  - os: linux
#    dist: trusty
#    addons:
#     apt:
#       sources:
#         - ubuntu-toolchain-r-test
#         - llvm-toolchain-trusty-4.0
#       packages:
#          - clang-4.0
#          - libgtest-dev
#          - libboost1.55-all-dev
#    env:
#      - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0 && CONFIG=Debug && SHARED=0 && SANITIZE=address"

#  - os: linux
#    dist: trusty
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#          - llvm-toolchain-trusty-4.0
#        packages:
#          - clang-4.0
#          - libgtest-dev
#          - libboost1.55-all-dev
#    env:
#      - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0 && CONFIG=Debug && SHARED=0 && SANITIZE=undefined"
#
#  - os: linux
#    dist: trusty
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#          - llvm-toolchain-trusty-4.0
#        packages:
#          - clang-4.0
#          - libgtest-dev
#          - libboost1.55-all-dev
#    env:
#      - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0 && CONFIG=Debug && SHARED=0 && SANITIZE=thread"
#
#  - os: linux
#    dist: trusty
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#          - llvm-toolchain-trusty-4.0
#        packages:
#          - clang-4.0
#          - libgtest-dev
#          - libboost1.55-all-dev
#    env:
#      - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0 && CONFIG=Debug && SHARED=0"
cache:
  - apt: true
  - directories:
    - .conan
    - lcov

before_install:
# Set up CC/CXX variables.
  - eval "${MATRIX_EVAL}"
  - export CMAKE=cmake
# workaround for not having lcov 1.13
  - if [ ! -d "lcov/usr/bin/lcov" ]; then
      wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.13.orig.tar.gz;
      tar -xzf lcov_1.13.orig.tar.gz;
      mkdir lcov || true;
      DESTDIR=$HOME/lcov make -C lcov-1.13/ install;
    fi
  - export LCOV=$HOME/lcov/usr/local/bin/lcov
# install conan for package dependencies
  - pip install --user conan
# install coverage software
  - if [ "$COVERAGE" == "ON" ]; then gem install coveralls-lcov; fi

before_script:
  - mkdir build || true
  - cd build
  - conan remote add nonstd-lite https://api.bintray.com/conan/agauniyal/nonstd-lite
  - conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
  - conan install .. -s compiler.libcxx=libstdc++11 -s cppstd=14 -o telnetpp:withTests=True --build=missing
  - $CMAKE -DCMAKE_BUILD_TYPE=$CONFIG -DBUILD_SHARED_LIBS=$SHARED -DTELNETPP_WITH_TESTS=True -DTELNETPP_SANITIZE=$SANITIZE -DTELNETPP_COVERAGE=$COVERAGE ..

script:
  - make
  - if [ "$COVERAGE" == "ON" ]; then
        $LCOV --gcov-tool=gcov-5 --base-directory . --directory . --zerocounters -q;
    fi
  - make test

after_failure:
  - cat Testing/Temporary/LastTest.log

after_success:
  - if [ "$COVERAGE" == "ON" ]; then
        $LCOV --gcov-tool=gcov-5 --base-directory . --directory .  --capture --output-file coverage.info;
        $LCOV --gcov-tool=gcov-5 --remove coverage.info '*/test/*' '/usr/*' --output-file coverage.info;
        $LCOV --gcov-tool=gcov-5 --list coverage.info;
        coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info;
    fi

notifications:
  email:
    on_success: change # [always|never|change] # default: change
    on_failure: change # [always|never|change] # default: always
  slack:
    rooms:
      - kazdragon:E8B4Cs4p3TiVLqHAq8wYYTr3#ci
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/dd988061905795003d31
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always

